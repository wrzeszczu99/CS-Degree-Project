<UserControl x:Class="CEOS.MVVM.Views.Game.StorageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CEOS.MVVM.Views.Game"
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d" Background="Transparent"
             d:DesignHeight="570" d:DesignWidth="960">

    <UserControl.Resources>
        <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockTheme}"/>
        <Style TargetType="Button" BasedOn="{StaticResource MenuButtonTheme}"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="350"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--Info-->
        <DockPanel Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" >
            <StackPanel DockPanel.Dock="Top">
                <TextBlock  MinHeight="30">Aktualna wielkość magazynów:</TextBlock>
                <TextBlock Height="30" x:Name="PlayerFactory_StorageCap"/>

                <TextBlock Height="30">Planowana wielkość magazynów:</TextBlock>
                <TextBlock Height="30" x:Name="PlayerFactory_StorageTarget"/>

                <TextBlock Height="30">Zwiększ wielkość magazynów o:</TextBlock>
                <TextBox Height="30"  x:Name="NewTarget" HorizontalAlignment="Stretch" ></TextBox>
                <Button  Height="30" x:Name="ChangeStorageCapTarget" Content="Zwiększ" HorizontalAlignment="Stretch"  cal:Message.Attach="[Event Click] = [Action ChangeStorageCapTarget(NewTarget.Text)]"/>
            </StackPanel>
            <!--<Button Name="SaveStorageSettings" Content="Zapisz" MinHeight="50" DockPanel.Dock="Bottom" VerticalAlignment="Bottom"/> -->
        </DockPanel>
        
        <!--Warehouse-->
        <DockPanel Grid.Row="0" Grid.Column="1" LastChildFill="True" Margin="5" >
            <TextBlock FontSize="18" DockPanel.Dock="Top">Magazyn</TextBlock>
            <DataGrid x:Name="Warehouse"
                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False"
                      DockPanel.Dock="Top" VerticalAlignment="Stretch" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Nazwa" Binding="{Binding Path = Product.Name}" IsReadOnly="True"/>
                    <DataGridTextColumn Header ="Stan magazynu" Binding="{Binding Path= Actual}" IsReadOnly="True" />
                    <DataGridTextColumn Header ="Cel magazynu" Binding="{Binding Path = Target, Mode=TwoWay}" />
                    <DataGridTextColumn Header ="Koszt" Binding="{Binding Path= StoringCost}" IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
        <!-- Raw materials-->
        <DockPanel Grid.Row="0" Grid.Column="2" LastChildFill="True" Margin="5" >
            <TextBlock FontSize="18" DockPanel.Dock="Top">Surowce</TextBlock>
            <DataGrid x:Name="Materials"
                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False"
                      DockPanel.Dock="Top" VerticalAlignment="Stretch" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Nazwa" Binding="{Binding Path = Name}" IsReadOnly="True"/>
                    <DataGridTextColumn Header ="Maksymalna cena" Binding="{Binding Path= Price, Mode=TwoWay}" />
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
        <!--Produced-->
        <DockPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" LastChildFill="True" Margin="5" >
            <TextBlock FontSize="18" DockPanel.Dock="Top">Produced</TextBlock>
            <DataGrid x:Name="Produced"
                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False"
                      DockPanel.Dock="Top" VerticalAlignment="Stretch" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Nazwa" Binding="{Binding Path = Name}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Pracogodziny" Binding="{Binding Path = WorkHours}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Aktualna moc przerobowa" Binding="{Binding Path = WorkpowerShareAct}" IsReadOnly="True"/>
                    <DataGridTextColumn Header ="Cel mocy przerobowej" Binding ="{Binding Path= WorkpowerShareTrg, Mode=TwoWay}"/>
                    <DataGridTextColumn Header ="Cena Sprzedaży" Binding="{Binding Path= Price, Mode=TwoWay }" />
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>


    </Grid>
</UserControl>
